return {
  -- {
  --   "saghen/blink.cmp",
  --   enabled = false,
  --   version = "*",
  --   lazy = false,
  --   dependencies = {
  --     { "L3MON4D3/LuaSnip", version = "v2.*" },
  --     { "nvim-tree/nvim-web-devicons" },
  --     {
  --       "onsails/lspkind-nvim",
  --       opts = {
  --         mode = "symbol",
  --         preset = "default",
  --       },
  --     },
  --   },
  --   opts = {
  --     sources = {
  --       default = {
  --         "lsp",
  --         "path",
  --         "buffer",
  --         "snippets",
  --         "omni",
  --         "cmdline",
  --       },
  --     },
  --     snippets = {
  --       preset = "luasnip",
  --     },
  --     signature = {
  --       enabled = true,
  --     },
  --     appearance = {
  --       use_nvim_cmp_as_default = true,
  --       nerd_font_variant = "mono",
  --     },
  --     completion = {
  --       documentation = {
  --         auto_show = true,
  --       },
  --       list = {
  --         selection = {
  --           preselect = true,
  --           auto_insert = true,
  --         },
  --       },
  --       menu = {
  --         draw = {
  --           components = {
  --             kind_icon = {
  --               text = function(ctx)
  --                 local lspkind = require("lspkind")
  --                 local devicon = require("nvim-web-devicons")
  --                 local icon = ctx.kind_icon
  --                 if vim.tbl_contains({ "Path" }, ctx.source_name) then
  --                   icon = devicon.get_icon(ctx.label) or icon
  --                 else
  --                   icon = lspkind.symbolic(ctx.kind, { mode = "symbol" })
  --                 end
  --                 return icon .. ctx.icon_gap
  --               end,
  --               -- highlight = function(ctx) end,
  --             },
  --           },
  --         },
  --       },
  --     },
  --     keymap = {
  --       preset = "none",
  --       ["<C-Space>"] = { "show_and_insert" },
  --       ["<Tab>"] = { "select_next", "fallback" },
  --       ["<S-Tab>"] = { "select_prev", "fallback" },
  --       ["<CR>"] = { "select_and_accept", "fallback" },
  --       ["<C-p>"] = { "show_signature", "hide_signature" },
  --       ["<C-s>"] = {
  --         function(cmp)
  --           cmp.show({
  --             providers = {
  --               { "snippets" },
  --             },
  --           })
  --         end,
  --       },
  --     },
  --   },
  --   opts_extend = { "sources.default" },
  -- },
}
